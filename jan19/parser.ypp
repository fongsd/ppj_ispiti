%{

    #include <iostream>
    #include <cstdlib>
    #include <string>
    #include <map>
    #include <vector>
    using namespace std;

    map<string, int> promenljive;
    map<string, vector<int>* > liste;

    void yyerror(string s)
    {
        cerr<<s<<endl;
        exit(EXIT_FAILURE);
    }

    void stampaj(int broj, int osnova)
    {
        if (osnova == 10)
        {
            printf("%d", broj);
        }
        else if (osnova == 8)
        {
            printf("%o", broj);
        }
        else if (osnova == 16)
        {
            printf("%x", broj);
        }
        else
        {
            yyerror("nepostojeca osnova");
        }
        cout<<endl;
    }

    int yylex();
%}

%union {
    string *s;
    int d;
    vector<int>* elementi;
};

%left '+' '-';
%left '*' '/';
%left '=';
%left rel_op '&' '|';
%left left_shift right_shift;
%token <d> broj;
%token <s> id_token list_id;
%token left_shift right_shift print_token int_token;

%type <d> izraz;
%%



nizNaredbi: nizNaredbi naredba '\n';
| naredba '\n' ;
naredba: int_token id_token '=' izraz ';' {
    promenljive[*$2] = $4;
    delete $2;
}
| broj {
    printf("%d\n", $1);
}
| print_token '(' izraz ',' broj ')' ';' {
    stampaj($3, $5);
}
| int_token id_token ';' {
    auto it = promenljive.find(*$2);
    
    if (it == promenljive.end())
    {
        yyerror("nedefinisana promenljiva");
    }
    else
    {
        printf("%d\n", it->second);
        promenljive[*$2] = 0;
        delete $2;
    }
}
| id_token '=' izraz ';' {
    promenljive[*$1] = $3;
    delete $1;
}
;

izraz: broj {
    $$ = $1;
}
| izraz '+' izraz {
    $$ = $1 + $3;
}
| izraz '-' izraz {
    $$ = $1 - $3;
}
| izraz '*' izraz {
    $$ = $1 * $3;
}
| izraz '/' izraz {
    $$ = $1 / $3;
}
| id_token { 
    auto it = promenljive.find(*$1);
    
    if (it == promenljive.end())
    {
        yyerror("nedefinisana promenljiva");
    }
    else
    {
        $$ = it->second;
        delete $1;
    }
}
| izraz left_shift izraz {
    $$ = $1 << $3;
} 
| '(' izraz ')' {
    $$ = $2;
}
| '~' '(' izraz ')' ';'
{
    $$ = ~$3;
}
| izraz rel_op izraz ';' {
    if ($1 == $3)
        cout<<"True!\n";
    else
        cout<<"False!\n";
}
| izraz '&' izraz {
    $$ = $1 & $3;
}
| izraz '|' izraz {
    $$ = $1 | $3;
}
| izraz '=' izraz ';' {
    $1 = $3;
}
%%

int main()
{
    yyparse();

    return 0;

}
